<?php

/*
Plugin Name: oik base plugin 
Plugin URI: http://www.oik-plugins.com/oik
Description: Lazy smart shortcodes for displaying often included key-information and other WordPress content
Version: 1.13
Author: bobbingwide
Author URI: http://www.bobbingwide.com
License: GPL2

    Copyright 2010-2012 Bobbing Wide (email : herb@bobbingwide.com )

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License version 2,
    as published by the Free Software Foundation.

    You may NOT assume that you can use any other version of the GPL.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    The license for this software can likely be found here:
    http://www.gnu.org/licenses/gpl-2.0.html

*/
global $bw_options;
require_once( "oik_boot.inc" );

/* All of the oik plugins and many of the common functions include calls to bw_trace(), bw_trace2() or bw_backtrace() so we need to include bwtrace.inc
*/   
  require_once( 'bwtrace.inc' );
  require_once( "bobbfunc.inc" );
  require_once( "bobbcomp.inc" );

/**
 * Return the oik_version
 * @returns string oik version number e.g. 1.13
 */  
function oik_version() {
  return bw_oik_version();
}

 
  require_once( "oik-add-shortcodes.php" );

  add_filter('widget_text', 'do_shortcode');
  add_filter('the_title', 'do_shortcode' ); 
  //add_filter('wpbody-content', 'do_shortcode' );
  add_filter('wp_footer', 'do_shortcode' );

  add_filter('get_the_excerpt', 'do_shortcode' );
  add_filter('the_excerpt', 'do_shortcode' );
  // The big question is... do we need to add this filter 
  // or can we rely on it having been already added
  // Well it all depends on how add_filter works **?**
  // add_filter('the_content', 'do_shortcode', 11 );
  //add_filter('get_pages', 'do_shortcode' );

  $bw_options = get_option( 'bw_options' );

  //add_action('wp_print_styles', 'oik_enqueue_stylesheets');
  add_action('wp_enqueue_scripts', 'oik_enqueue_stylesheets');
  add_action('init', 'oik_main_init' );
  
  add_action( 'wp_ajax_oik_ajax_list_shortcodes', 'oik_ajax_list_shortcodes' );
  add_action( 'wp_ajax_oik_ajax_load_shortcode_syntax', 'oik_ajax_load_shortcode_syntax' );
  add_action( 'wp_ajax_oik_ajax_load_shortcode_help', 'oik_ajax_load_shortcode_help' );
  //add_action( 'admin_enqueue_scripts', 'bw_button_options' );
  
  

/** 
 * enqueue the oik.css, bwlink.css and $customCSS stylesheets
 *
 * oik.css contains styles for oik shortcodes
 * bwlink.css contains styles for the bobbingwide and oik branding colours
 * $customCSS is embedded only if selected on oik options
 * 
 * Note: in an earlier version of this code I attempted to ensure
 * that these stylesheets were embedded after the theme's stylesheet
 * BUT this only works if the theme's stylesheet is enqueued using wp_enqueue_style
 * So it worked for child theme's (of buddypress) BUT it didn't work for themes
 * generated by Artisteer where the stylesheets are defined directly in header.php
 * The solution is this callback function invoked for the 'wp_print_styles' action
 * Note: For WordPress 3.3 we've been recommended to use the wp_enqueue_scripts' action instead of 'wp_print_styles'
 */
function oik_enqueue_stylesheets() {
  //global $wp_styles;
  bw_trace2();
  wp_enqueue_style( 'oikCSS', WP_PLUGIN_URL . '/oik/oik.css' ); 
  
  // **?** suggest this stylesheet is only enqueued for bob-bing-wide and oik admin
  wp_enqueue_style( 'bwlinkCSS', WP_PLUGIN_URL . '/oik/bwlink.css' ); 
  
  $customCSS =  bw_get_option( 'customCSS' );
  if ( !empty( $customCSS) ) {
  
    //bw_trace( $wp_styles, __FUNCTION__, __LINE__, __FILE__, "wp_styles");
  
    //$deps = array( get_current_theme() );
    
    //bw_trace( $deps, __FUNCTION__, __LINE__, __FILE__, "deps");
    //bw_trace( $customCSS, __FUNCTION__, __LINE__, __FILE__, "customCSS");
    $customCSSurl = get_stylesheet_directory_uri() . '/' .  $customCSS;
    
    bw_trace( $customCSSurl, __FUNCTION__, __LINE__, __FILE__, "customCSSurl");

    //wp_register_style( 'customCSS', $customCSSurl, $deps);
    wp_register_style( 'customCSS', $customCSSurl );
    
    wp_enqueue_style( 'customCSS' );
  }
  // bw_trace( $wp_styles, __FUNCTION__, __LINE__, __FILE__, "wp_styles");
 
  //bw_button_options();
}
  

/** 
 * Implement the 'init' action
 * 
 * start oik and let oik dependent plugins know it's OK to use the oik API
*/
function oik_main_init() {
  add_action( 'admin_menu', 'oik_admin_menu' );
  add_action( "activate_plugin", "oik_load_plugins" );
  do_action( 'oik_loaded' );
}

/**
 * Implement the 'admin_menu' action
 *
 * Note: This comes before 'admin_init' and after '_admin_menu'
 *
*/ 
function oik_admin_menu() {
  require_once( 'admin/oik-admin.inc' );
  oik_options_add_page();
  add_action('admin_init', 'oik_admin_init' );
}

/**
 * Implement 'admin_init'
*/
function oik_admin_init() {
  oik_options_init();
}

function oik_ajax_list_shortcodes() {
  oik_require( 'shortcodes/oik-codes.php' );
  
  $sc_list = bw_shortcode_list();
  $sc_json = json_encode( $sc_list );   
  bw_trace2( $sc_json );
  echo $sc_json;
  die(); 

}

function oik_ajax_load_shortcode_syntax() {

  oik_require( "includes/oik-sc-help.inc" );
  $shortcode = bw_array_get( $_REQUEST, 'shortcode', 'oik' );
  $sc_syntax = _bw_lazy_sc_syntax( $shortcode );
  $sc_json = json_encode( $sc_syntax );   
  bw_trace2( $sc_json, "sc_json" );
  echo $sc_json;
  die();

}


function oik_ajax_load_shortcode_help() {

  oik_require( "includes/oik-sc-help.inc" );
  $shortcode = bw_array_get( $_REQUEST, 'shortcode', 'oik' );
  
  bw_trace2( $shortcode, "shortcode" );
  $sc_help = bw_lazy_sc_example( $shortcode );
  bw_trace2( $sc_help, "sc_help" );
  echo $sc_help;
  bw_flush();
  
  die();

}


/**
 * let ajax know what to call on jQuery.post **?** not necessary as we can use WordPress's ajaxurl variable
 * 
 */

function bw_add_ajaxurl() { 
  // Do we need the protocol? 
  
  wp_enqueue_script( 'otherbits', plugin_dir_url( __FILE__). 'otherbits.js', array( 'jquery' ) );
  //wp_enqueue_script( 'otherbits2', plugin_dir_url( __FILE__). 'otherbits2.js', array( 'jquery' ) );
  $otherbits = array( "ajaxurl" => admin_url( 'admin-ajax.php' ));
  wp_localize_script( 'otherbits', 'otherbits', $otherbits ); 
}        


/**
 * Return all the jQuery/JavaScript to enable shortcode creation from the editor buttons 
   **?** Changed to not working 2012/03/19
 */
function bw_preload_button_options() {

  wp_enqueue_script( 'bw_shortcodes', plugin_dir_url( __FILE__). 'bw_shortcodes.js', array( 'jquery' ) );

  // $data = array( 'some_string' => __( 'Some string to translate' ) );
  oik_require( "shortcodes/oik-codes.php" );
  $data = bw_shortcode_list();
  wp_localize_script( 'bw_shortcodes', 'bw_shortcodes', $data );
  // bw_add_ajaxurl( 'bw_shortcodes' );
}  
        






